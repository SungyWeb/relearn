[{"/Users/sunguoyuan/Desktop/Private/relearn/src/App.tsx":"1","/Users/sunguoyuan/Desktop/Private/relearn/src/index.tsx":"2","/Users/sunguoyuan/Desktop/Private/relearn/src/app.tsx":"3","/Users/sunguoyuan/Desktop/Private/relearn/src/components/Layout/index.tsx":"4","/Users/sunguoyuan/Desktop/Private/relearn/src/routes/index.tsx":"5","/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Three/01.tsx":"6","/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Three/02.tsx":"7","/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Welcome/index.tsx":"8","/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Three/index.tsx":"9","/Users/sunguoyuan/Desktop/Private/relearn/src/units/someHooks.ts":"10"},{"size":166,"mtime":1610963421064,"results":"11","hashOfConfig":"12"},{"size":149,"mtime":1612169362083,"results":"13","hashOfConfig":"12"},{"size":135,"mtime":1612160774652,"results":"14","hashOfConfig":"12"},{"size":2277,"mtime":1613520455429,"results":"15","hashOfConfig":"12"},{"size":598,"mtime":1612231647561,"results":"16","hashOfConfig":"12"},{"size":3160,"mtime":1613522234625,"results":"17","hashOfConfig":"12"},{"size":4443,"mtime":1613694075490,"results":"18","hashOfConfig":"12"},{"size":109,"mtime":1612170157952,"results":"19","hashOfConfig":"12"},{"size":512,"mtime":1613523429124,"results":"20","hashOfConfig":"12"},{"size":448,"mtime":1613545872821,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nnv6w9",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sunguoyuan/Desktop/Private/relearn/src/App.tsx",[],"/Users/sunguoyuan/Desktop/Private/relearn/src/index.tsx",[],["48","49"],"/Users/sunguoyuan/Desktop/Private/relearn/src/app.tsx",[],["50","51"],"/Users/sunguoyuan/Desktop/Private/relearn/src/components/Layout/index.tsx",["52","53","54"],"import { Result, Button, Layout, Menu } from 'antd'\nimport {\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined\n} from '@ant-design/icons'\nimport './index.css'\nimport ReactMarkdown from 'react-markdown'\nimport { useRequest } from 'ahooks'\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom'\nimport routes from '../../routes'\nimport RouteWithSubRoute from '../../base-component/RouteWithSubRoute'\n\nconst { Header, Content, Sider } = Layout\nexport default function BasicLayout() {\n  const {data} = useRequest(() => fetch('/md/01.md').then(res => {\n    return res.text()\n  }))\n  return (\n    <BrowserRouter>\n      <Layout className=\"h100\">\n        <Sider>\n          <div className=\"logo\">\n            <Link to=\"/\">\n              <img height={32} style={{margin: 16}} src=\"https://www.leiue.com/uploads/2019/06/ECMAScript.png\" alt=\"logo\"/>\n              <span className=\"logo-text\">ReLearn JS</span>\n            </Link>\n          </div>\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.SubMenu key=\"three\" icon={<UserOutlined />} title=\"THREE.JS\">\n              <Menu.Item key=\"1\">\n                <Link to=\"/three/1\">第一章</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/three/2\">第二章</Link>\n              </Menu.Item>\n            </Menu.SubMenu>\n            <Menu.Item key=\"/\" icon={<VideoCameraOutlined />}>\n              nav 2\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n              nav 3\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Content>\n            {/* <ReactMarkdown>{data || ''}</ReactMarkdown> */}\n            <Switch>\n              {\n                routes.map((v, i) => {\n                  return <RouteWithSubRoute key={i} {...v} />\n                })\n              }\n              <Route component={() => (\n                <Result\n                  status=\"404\"\n                  title=\"404\"\n                  subTitle=\"页面不存在\"\n                  extra={<Button type=\"primary\" href=\"/\">回到首页</Button>}\n                />\n              )} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n",["55","56"],"/Users/sunguoyuan/Desktop/Private/relearn/src/routes/index.tsx",[],"/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Three/01.tsx",["57","58","59"],"import Stats from 'stats.js'\nimport { useEffect, useRef, useState } from 'react'\n// @ts-ignore\nimport AsciiEffect from 'three-asciieffect'\n\nimport {\n  Scene,\n  PerspectiveCamera,\n  WebGLRenderer,\n  AxesHelper,\n  PlaneGeometry,\n  MeshBasicMaterial,\n  Mesh,\n  BoxGeometry,\n  SphereGeometry,\n  SpotLight,\n  MeshLambertMaterial,\n} from 'three'\n\ninterface Instances {\n    scene: Scene,\n    camera: PerspectiveCamera,\n    rendener: WebGLRenderer,\n}\n\nconst w = 1000, h = 500\n\nconst Three01: React.FC = () => {\n  const container = useRef<HTMLDivElement>(null)\n  const [ins, setIns] = useState<Instances>(() => ({\n    scene: new Scene(),\n    camera: new PerspectiveCamera(45, w / h, 0.1, 1000),\n    rendener: new WebGLRenderer(),\n  }))\n  useEffect(() => {\n    const stats = new Stats()\n    stats.showPanel(1)\n    document.body.appendChild(stats.dom)\n\n    const draw = () => {\n      stats.begin()\n      const { scene, camera, rendener } = ins\n\n      rendener.setClearColor(0xEEEEEE, 1.0)\n      rendener.setSize(w, h)\n      rendener.shadowMap.enabled = true\n\n      const axes = new AxesHelper(20)\n      scene.add(axes)\n\n      const planeGeometry = new PlaneGeometry(60, 20, 1, 1)\n      const planeMaterial = new MeshLambertMaterial({ color: 0xCCCCCC })\n\n      const plane = new Mesh(planeGeometry, planeMaterial)\n      plane.rotation.x = -0.5 * Math.PI\n      plane.position.set(15, 0, 0)\n      plane.receiveShadow = true\n      scene.add(plane)\n\n      const cubeGeometry = new BoxGeometry(4, 4, 4)\n      const cubeMaterial = new MeshLambertMaterial({ color: 0xff0000 })\n      const cube = new Mesh(cubeGeometry, cubeMaterial)\n      cube.castShadow = true\n      scene.add(cube)\n\n      const sphereGeometry = new SphereGeometry(4, 20, 20)\n      const sphereMaterial = new MeshLambertMaterial({ color: 0x777777ff })\n      const sphere = new Mesh(sphereGeometry, sphereMaterial)\n      sphere.position.set(20, 4, 2)\n      sphere.castShadow = true\n      scene.add(sphere)\n\n      const spotLight = new SpotLight(0xffffff)\n      spotLight.position.set(-40, 60, -10)\n      spotLight.castShadow = true\n      scene.add(spotLight)\n\n      camera.position.set(-30, 40, 30)\n      camera.lookAt(scene.position)\n\n      container.current!.appendChild(rendener.domElement)\n\n      /*\n      S-AsciiEffect 将图形用文本形式渲染\n      const effect = new AsciiEffect(rendener)\n      effect.setSize(w, h)\n      container.current!.appendChild(effect.domElement)\n      E-AsciiEffect\n      */\n      stats.end()\n\n      let step = 0\n      const render = () => {\n        rendener.render(scene, camera)\n        /*\n        S-AsciiEffect\n        effect.render(scene, camera)\n        E-AsciiEffect\n        */\n        requestAnimationFrame(render)\n        // cube.rotation.x += 0.2\n        // cube.rotation.y += 0.2\n        cube.rotation.z += 0.2\n        step += 0.05\n        sphere.position.x = 20 + (10 * (Math.cos(step)))\n        sphere.position.y = 2 + (10 * Math.abs(Math.sin(step)))\n\n      }\n      render()\n    }\n    container.current && draw()\n    return () => {\n      ins.rendener.forceContextLoss()\n    }\n  }, [ins])\n  return (\n    <div ref={container}></div>\n  )\n}\n\nexport default Three01\n","/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Three/02.tsx",["60","61","62","63","64","65","66","67","68"],"import { useThrottle, useThrottleFn } from 'ahooks'\nimport React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport Stats from 'stats.js'\nimport {\n  Scene,\n  PerspectiveCamera,\n  PlaneGeometry,\n  MeshLambertMaterial,\n  Mesh,\n  AmbientLight,\n  SpotLight,\n  WebGLRenderer,\n  AxesHelper,\n  BoxGeometry,\n  Color,\n} from 'three'\nimport { usePrevValue, useThree } from '../../units/someHooks'\nimport * as dat from 'dat.gui'\nimport { render } from '@testing-library/react'\n\n\nconst Three02: React.FC = () => {\n  const box = useRef<HTMLDivElement>(null)\n\n  const [cvsDom, setCvsDom] = useState<any>(null)\n  const [statsDom, setStatsDom] = useState<any>(null)\n  // const { scene, camera, renderer } = useThree()\n  useEffect(() => {\n    const stats = initStats()\n    const init = () => {\n      if(!box) return\n      const w = Number(box.current?.clientWidth || 0)\n      const h = Number(box.current?.clientHeight || 0)\n\n      const scene = new Scene()\n      const camera = new PerspectiveCamera(45, w/h, 0.1, 1000)\n      scene.add(camera)\n      const renderer = new WebGLRenderer()\n      renderer.setSize(w, h)\n      renderer.setClearColor(new Color(0xEEEEEE))\n      renderer.shadowMap.enabled = true\n\n      const axes = new AxesHelper(1000)\n      scene.add(axes)\n\n      const planeGeometry = new PlaneGeometry(60, 40, 1, 1)\n      const planeMaterial = new MeshLambertMaterial({ color: 0xffffff })\n      const plane = new Mesh(planeGeometry, planeMaterial)\n      plane.position.set(0, 0, 0)\n      plane.rotation.x = -Math.PI / 2\n      plane.receiveShadow = true\n      scene.add(plane)\n\n      const ambientLight = new AmbientLight(0x0c0c0c)\n      scene.add(ambientLight)\n\n      const spotLight = new SpotLight(0xffffff)\n      spotLight.position.set(-40, 60, -10)\n      spotLight.castShadow = true\n      scene.add(spotLight)\n\n      camera.position.set(-30, 40, 30)\n      camera.lookAt(scene.position)\n\n      box.current?.appendChild(renderer.domElement)\n      setCvsDom(renderer.domElement)\n\n      class Controls {\n        rotationSpeed = 0.5\n        numberOfObjects = scene.children.length\n\n        removeCube() {\n          const allChild = scene.children, lastObj = allChild[allChild.length - 1]\n          if(lastObj instanceof Mesh) {\n            scene.remove(lastObj)\n            this.numberOfObjects = scene.children.length\n          }\n        }\n\n        addCube() {\n          let size = Math.ceil(Math.random() * 3)\n          const cubeGeometry = new BoxGeometry(size, size, size)\n          const cubeMaterial = new MeshLambertMaterial({color: Math.random() * 0xffffff})\n          const cube = new Mesh(cubeGeometry, cubeMaterial)\n          cube.castShadow = true\n          cube.name = 'cube-' + scene.children.length\n\n          cube.position.x = -30 + Math.round((Math.random() * planeGeometry.parameters.width))\n          cube.position.y = Math.round((Math.random() * 5))\n          cube.position.z = -20 + Math.round((Math.random() * planeGeometry.parameters.height))\n\n          scene.add(cube)\n          this.numberOfObjects = scene.children.length\n        }\n        output() {\n          console.log(scene.children.length)\n        }\n      }\n\n      const controls = new Controls()\n\n      const gui = new dat.GUI()\n      gui.add(controls, 'rotationSpeed', 0, 0.5)\n      gui.add(controls, 'addCube')\n      gui.add(controls, 'removeCube')\n      gui.add(controls, 'output')\n      gui.add(controls, 'numberOfObjects').listen()\n\n      render()\n\n      function render() {\n        stats.update()\n\n        scene.traverse(e => {\n          if(e instanceof Mesh && e !== plane) {\n            e.rotation.x += controls.rotationSpeed\n            e.rotation.y += controls.rotationSpeed\n            e.rotation.z += controls.rotationSpeed\n          }\n        })\n\n        requestAnimationFrame(render)\n        renderer.render(scene, camera)\n      }\n    }\n    init()\n    function initStats () {\n      const stats = new Stats()\n      stats.showPanel(0)\n      stats.dom.style.position = 'absolute'\n      stats.dom.style.top = '0px'\n      stats.dom.style.left = '0px'\n\n      setStatsDom(stats.dom)\n      return stats\n    }\n    return () => {\n      console.log('destory')\n    }\n  }, [])\n  return <>\n    <div ref={box} style={{height: '100%', position: 'relative'}} >\n      {/* {[cvsDom]} */}\n    </div>\n    <div id=\"stats\" style={{position: 'fixed', top: 0, right: 0}}>\n      {/* {[statsDom]} */}\n    </div>\n  </>\n\n}\n\nexport default Three02","/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Welcome/index.tsx",[],"/Users/sunguoyuan/Desktop/Private/relearn/src/pages/Three/index.tsx",[],"/Users/sunguoyuan/Desktop/Private/relearn/src/units/someHooks.ts",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":21},{"ruleId":"75","severity":1,"message":"79","line":14,"column":9,"nodeType":"77","messageId":"78","endLine":14,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":16,"column":10,"nodeType":"77","messageId":"78","endLine":16,"endColumn":14},{"ruleId":"69","replacedBy":"81"},{"ruleId":"71","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"83","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"84","line":12,"column":3,"nodeType":"77","messageId":"78","endLine":12,"endColumn":20},{"ruleId":"75","severity":1,"message":"85","line":30,"column":15,"nodeType":"77","messageId":"78","endLine":30,"endColumn":21},{"ruleId":"75","severity":1,"message":"86","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":21},{"ruleId":"75","severity":1,"message":"87","line":1,"column":23,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"88","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":28},{"ruleId":"75","severity":1,"message":"89","line":2,"column":41,"nodeType":"77","messageId":"78","endLine":2,"endColumn":56},{"ruleId":"75","severity":1,"message":"90","line":17,"column":10,"nodeType":"77","messageId":"78","endLine":17,"endColumn":22},{"ruleId":"75","severity":1,"message":"91","line":17,"column":24,"nodeType":"77","messageId":"78","endLine":17,"endColumn":32},{"ruleId":"75","severity":1,"message":"92","line":19,"column":10,"nodeType":"77","messageId":"78","endLine":19,"endColumn":16},{"ruleId":"75","severity":1,"message":"93","line":25,"column":10,"nodeType":"77","messageId":"78","endLine":25,"endColumn":16},{"ruleId":"75","severity":1,"message":"94","line":26,"column":10,"nodeType":"77","messageId":"78","endLine":26,"endColumn":18},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"@typescript-eslint/no-unused-vars","'ReactMarkdown' is defined but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","'data' is assigned a value but never used.",["95"],["96"],"'AsciiEffect' is defined but never used.","'MeshBasicMaterial' is defined but never used.","'setIns' is assigned a value but never used.","'useThrottle' is defined but never used.","'useThrottleFn' is defined but never used.","'useCallback' is defined but never used.","'useLayoutEffect' is defined but never used.","'usePrevValue' is defined but never used.","'useThree' is defined but never used.","'render' is defined but never used.","'cvsDom' is assigned a value but never used.","'statsDom' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]